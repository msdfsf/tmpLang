{
    "name": "vi",
    "scopeName": "source.vi",
    "fileTypes": [
        "vi"
    ],
    "patterns": [
        { "include": "#comment" },
        { "include": "#strings" },
        { "include": "#import_statement" },
        { "include": "#namespace_definition" },
        { "include": "#function_definition" },
        { "include": "#struct_union_definition" },
        { "include": "#error_definition" },
        { "include": "#keywords" },
        { "include": "#constants" },
        { "include": "#operators" },
        { "include": "#custom-type" },
        { "include": "#function_call" },
        { "include": "#punctuation" }
    ],
    "repository": {
        "comment": {
            "patterns": [
                { "include": "#line_comment" },
                { "include": "#block_comment" }
            ]
        },
        "line_comment": {
            "name": "comment.line.double-slash.vi",
            "match": "\\/\\/.*"
        },
        "block_comment": {
            "name": "comment.block.vi",
            "begin": "/{",
            "end": "/}",
            "patterns": [
                { "include": "#block_comment" }
            ]
        },
        "strings": {
            "patterns": [
                { "include": "#string_literal" },
                { "include": "#char_literal" }
            ]
        },
        "string_literal": {
            "name": "string.quoted.double.vi",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                { "include": "#string_escape" }
            ]
        },
        "char_literal": {
            "name": "string.quoted.single.vi",
            "begin": "'",
            "end": "'",
            "patterns": [
                { "include": "#string_escape" }
            ]
        },
        "string_escape": {
            "name": "constant.character.escape.vi",
            "match": "\\\\([btnfr\"'\\\\]|[0-7]{1,3}|x[0-9a-fA-F]+)"
        },
        "punctuation": {
            "patterns": [
                { "name": "punctuation.terminator.statement.vi", "match": ";" },
                { "name": "punctuation.separator.comma.vi", "match": "," },
                { "name": "punctuation.separator.colon.vi", "match": ":" },
                { "name": "punctuation.section.scope.begin.vi", "match": "{" },
                { "name": "punctuation.section.scope.end.vi", "match": "}" },
                { "name": "punctuation.section.arguments.begin.vi", "match": "\\(" },
                { "name": "punctuation.section.arguments.end.vi", "match": "\\)" },
                { "name": "punctuation.section.array.begin.vi", "match": "\\[" },
                { "name": "punctuation.section.array.end.vi", "match": "\\]" }
            ]
        },
        "constants": {
            "patterns": [
                { "include": "#numeric_literal" },
                { "include": "#language_constant" }
            ]
        },
        "numeric_literal": {
            "patterns": [
                { "include": "#float_literal" },
                { "include": "#integer_literal" }
            ]
        },
        "float_literal": {
            "name": "constant.numeric.float.vi",
            "match": "\\b((([0-9](_?[0-9])*)?\\.[0-9](_?[0-9])*)|([0-9](_?[0-9])*\\.))[fF]?\\b|\\b[0-9](_?[0-9])*[fF]\\b"
        },
        "integer_literal": {
            "name": "constant.numeric.integer.vi",
            "match": "\\b(0[xX][0-9a-fA-F](_?[0-9a-fA-F])*|0[bB][01](_?[01])*|0[0-7](_?[0-7])*|[1-9](_?[0-9])*|0)\\b"
        },
        "language_constant": {
            "name": "constant.language.vi",
            "match": "\\b(true|false|null)\\b"
        },
        "definition_keywords": {
            "name": "storage.type.declaration.vi",
            "match": "\\b(def|enum|error|fcn|namespace|struct|union)\\b"
        },
        "keywords": {
            "patterns": [
                { "include": "#control_keyword" },
                { "include": "#storage_keyword" },
                { "include": "#modifier_keyword" }
            ]
        },
        "control_keyword": {
            "name": "keyword.control.vi",
            "match": "\\b(if|else|continue|break|goto|using|while|for|loop|do|return|import|as|alloc|catch|free|from)\\b"
        },
        "storage_keyword": {
            "name": "storage.type.vi",
            "match": "\\b(int|i8|u8|i16|u16|i32|u32|i64|u64|f32|f64|string)\\b"
        },
        "modifier_keyword": {
            "name": "storage.modifier.vi",
            "match": "\\b(const|embed|local)\\b"
        },
        "operators": {
            "patterns": [
                { "name": "keyword.operator.scope-resolution.vi", "match": "::" },
                { "name": "keyword.operator.concatenation.vi", "match": "\\.\\." },
                { "name": "keyword.operator.member-access.vi", "match": "->" },
                { "name": "keyword.operator.assignment.vi", "match": "(=|\\+=|-=|\\*=|/=|%=|&=|\\^=|\\|=|<<=|>>=)" },
                { "name": "keyword.operator.increment-decrement.vi", "match": "(\\+\\+|--)" },
                { "name": "keyword.operator.logical.vi", "match": "(\\|\\||&&|!)" },
                { "name": "keyword.operator.comparison.vi", "match": "(==|!=|<=|>=|<|>)" },
                { "name": "keyword.operator.shift.vi", "match": "(<<|>>)" },
                { "name": "keyword.operator.bitwise.vi", "match": "(\\||&|\\^|~)" },
                { "name": "keyword.operator.arithmetic.vi", "match": "(\\+|-|\\*|/|%)" },
                { "name": "keyword.operator.ternary.vi", "match": "\\?" },
                { "name": "keyword.operator.pointer.vi", "match": "(\\*|&)" },
                { "name": "keyword.operator.arrow.vi", "match": "->" },
                { "name": "punctuation.separator.colon.vi", "match": ":" },
                { "name": "punctuation.accessor.dot.vi", "match": "\\." }
            ]
        },
        "custom-type": {
            "name": "entity.name.type.vi",
            "match": "(?!(using|while|for|loop|if|goto|return|goto|else|do|fcn|def|enum|const|embed|int|i8|u8|i16|u16|i32|u32|i64|u64|f32|f64|string))\\b([a-zA-z_][0-9a-zA-Z_]*)\\b(?=((\\s+)*\\b([a-zA-z_][0-9a-zA-Z_]*)\\b)|\\^)"
        },
        "function_call": {
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\()",
            "captures": {
                "1": { "name": "entity.name.function.call.vi" },
                "2": { "name": "punctuation.section.arguments.begin.vi" }
            }
        },
        "import_statement": {
            "name": "meta.import.vi",
            "begin": "(\\B#\\bimport\\b)",
            "beginCaptures": { "1": { "name": "keyword.control.import.vi" } },
            "end": "(;)",
            "endCaptures": { "1": { "name": "punctuation.terminator.statement.vi" } },
            "patterns": [
                { "match": "\\b(as)\\b", "name": "keyword.control.as.vi" },
                { "match": "[\\w,\\s-]+\\.[A-Za-z]+", "name": "string.unquoted.import.filename.vi" },
                { "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b", "name": "variable.other.alias.vi" }
            ]
        },
        "namespace_definition": {
            "name": "meta.namespace.definition.vi",
            "begin": "\\b(namespace)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*({)",
            "beginCaptures": { "1": { "name": "storage.type.namespace.vi" }, "2": { "name": "entity.name.namespace.vi" }, "3": { "name": "punctuation.section.scope.begin.vi" } },
            "end": "(})",
            "endCaptures": { "1": { "name": "punctuation.section.scope.end.vi" } },
            "patterns": [ { "include": "$self" } ]
        },
        "function_definition": {
            "name": "meta.function.definition.vi",
            "begin": "\\b(fcn)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\()",
            "beginCaptures": { "1": { "name": "storage.type.function.vi" }, "2": { "name": "entity.name.function.vi" }, "3": { "name": "punctuation.definition.parameters.begin.vi" } },
            "end": "({)",
            "endCaptures": { "1": { "name": "punctuation.section.scope.begin.vi" } },
            "contentName": "meta.function.declaration.vi",
            "patterns": [
                { "include": "#types" },
                { "include": "#keywords" },
                { "match": "->", "name": "storage.modifier.arrow.vi"},
                { "include": "#punctuation" }
            ]
        },
         "struct_union_definition": {
             "name": "meta.struct-union.definition.vi",
             "begin": "\\b(def)\\s+(union|struct)?\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*({)",
             "beginCaptures": { "1": { "name": "storage.type.declaration.vi" }, "2": { "name": "storage.type.declaration.modifier.vi" }, "3": { "name": "entity.name.type.declaration.vi" }, "4": { "name": "punctuation.section.scope.begin.vi" } },
             "end": "(})",
             "endCaptures": { "1": { "name": "punctuation.section.scope.end.vi" } },
             "patterns": [
                 { "include": "#types" },
                 { "include": "#punctuation" },
                 { "include": "#comment" }
             ]
         },
         "error_definition": {
             "name": "meta.error.definition.vi",
             "begin": "\\b(error)\\s*({)",
             "beginCaptures": { "1": { "name": "storage.type.declaration.vi" }, "2": { "name": "punctuation.section.scope.begin.vi" } },
             "end": "(})",
             "endCaptures": { "1": { "name": "punctuation.section.scope.end.vi" } },
             "patterns": [
                 { "include": "#punctuation" },
                 { "include": "#comment" }
             ]
         }
    }
}